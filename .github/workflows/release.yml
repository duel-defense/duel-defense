name: Release

on:
  push:
    tags:
        - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    - name: Setup wine
      id: wine_install
      run: |
        sudo apt install wine64
        echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT
    - name: Save Android Debug Keystore
      uses: akiojin/decode-base64-github-action@v1.0.10
      with:
        base64: ${{ secrets.ANDROID_DEBUG_KEYSTORE }}
        output-path: debug.keystore
    - name: Setup Android Debug Keystore
      run: |
        echo "GODOT_ANDROID_KEYSTORE_DEBUG_PATH=debug.keystore" >> $GITHUB_ENV
        echo "GODOT_ANDROID_KEYSTORE_DEBUG_USER=${{ secrets.ANDROID_DEBUG_KEYSTORE_USER }}" >> $GITHUB_ENV
        echo "GODOT_ANDROID_KEYSTORE_DEBUG_PASSWORD=${{ secrets.ANDROID_DEBUG_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
    - name: Export Game
      id: export
      uses: firebelley/godot-export@v6.0.0
      with:
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true
        export_debug: true
        cache: true
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
    - name: Create Release
      uses: ncipollo/release-action@v1.18.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*
    - name: Setup Butler
      shell: bash
      run: |
        curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
        unzip butler.zip
        chmod +x butler
        ./butler -V
    - name: Publish Linux
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: ./butler push ${{ steps.export.outputs.archive_directory }}/LinuxX11.zip d10sfan/duel-defense:linux --userversion ${{ github.ref_name }}
    - name: Publish Web
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: ./butler push ${{ steps.export.outputs.archive_directory }}/Web.zip d10sfan/duel-defense:html5 --userversion ${{ github.ref_name }}
    - name: Publish Windows
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: ./butler push ${{ steps.export.outputs.archive_directory }}/"Windows Desktop.zip" d10sfan/duel-defense:win --userversion ${{ github.ref_name }}
    - name: Publish Android
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: ./butler push ${{ steps.export.outputs.archive_directory }}/Android.zip d10sfan/duel-defense:android --userversion ${{ github.ref_name }}

